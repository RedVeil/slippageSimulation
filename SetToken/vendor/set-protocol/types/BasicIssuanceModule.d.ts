/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface BasicIssuanceModuleInterface extends ethers.utils.Interface {
  functions: {
    "controller()": FunctionFragment;
    "getRequiredComponentUnitsForIssue(address,uint256)": FunctionFragment;
    "initialize(address,address)": FunctionFragment;
    "issue(address,uint256,address)": FunctionFragment;
    "managerIssuanceHook(address)": FunctionFragment;
    "redeem(address,uint256,address)": FunctionFragment;
    "removeModule()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "controller",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getRequiredComponentUnitsForIssue",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "issue",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "managerIssuanceHook",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "redeem",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeModule",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "controller", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getRequiredComponentUnitsForIssue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "issue", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "managerIssuanceHook",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "redeem", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeModule",
    data: BytesLike
  ): Result;

  events: {
    "SetTokenIssued(address,address,address,address,uint256)": EventFragment;
    "SetTokenRedeemed(address,address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "SetTokenIssued"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetTokenRedeemed"): EventFragment;
}

export class BasicIssuanceModule extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: BasicIssuanceModuleInterface;

  functions: {
    controller(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "controller()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    getRequiredComponentUnitsForIssue(
      _setToken: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
      1: BigNumber[];
    }>;

    "getRequiredComponentUnitsForIssue(address,uint256)"(
      _setToken: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
      1: BigNumber[];
    }>;

    initialize(
      _setToken: string,
      _preIssueHook: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address,address)"(
      _setToken: string,
      _preIssueHook: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    issue(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "issue(address,uint256,address)"(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    managerIssuanceHook(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "managerIssuanceHook(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    redeem(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "redeem(address,uint256,address)"(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    removeModule(overrides?: Overrides): Promise<ContractTransaction>;

    "removeModule()"(overrides?: Overrides): Promise<ContractTransaction>;
  };

  controller(overrides?: CallOverrides): Promise<string>;

  "controller()"(overrides?: CallOverrides): Promise<string>;

  getRequiredComponentUnitsForIssue(
    _setToken: string,
    _quantity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: string[];
    1: BigNumber[];
  }>;

  "getRequiredComponentUnitsForIssue(address,uint256)"(
    _setToken: string,
    _quantity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: string[];
    1: BigNumber[];
  }>;

  initialize(
    _setToken: string,
    _preIssueHook: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address,address)"(
    _setToken: string,
    _preIssueHook: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  issue(
    _setToken: string,
    _quantity: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "issue(address,uint256,address)"(
    _setToken: string,
    _quantity: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  managerIssuanceHook(arg0: string, overrides?: CallOverrides): Promise<string>;

  "managerIssuanceHook(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<string>;

  redeem(
    _setToken: string,
    _quantity: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "redeem(address,uint256,address)"(
    _setToken: string,
    _quantity: BigNumberish,
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  removeModule(overrides?: Overrides): Promise<ContractTransaction>;

  "removeModule()"(overrides?: Overrides): Promise<ContractTransaction>;

  callStatic: {
    controller(overrides?: CallOverrides): Promise<string>;

    "controller()"(overrides?: CallOverrides): Promise<string>;

    getRequiredComponentUnitsForIssue(
      _setToken: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
      1: BigNumber[];
    }>;

    "getRequiredComponentUnitsForIssue(address,uint256)"(
      _setToken: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
      1: BigNumber[];
    }>;

    initialize(
      _setToken: string,
      _preIssueHook: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address,address)"(
      _setToken: string,
      _preIssueHook: string,
      overrides?: CallOverrides
    ): Promise<void>;

    issue(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "issue(address,uint256,address)"(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    managerIssuanceHook(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "managerIssuanceHook(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<string>;

    redeem(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "redeem(address,uint256,address)"(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removeModule(overrides?: CallOverrides): Promise<void>;

    "removeModule()"(overrides?: CallOverrides): Promise<void>;
  };

  filters: {
    SetTokenIssued(
      _setToken: string | null,
      _issuer: string | null,
      _to: string | null,
      _hookContract: null,
      _quantity: null
    ): EventFilter;

    SetTokenRedeemed(
      _setToken: string | null,
      _redeemer: string | null,
      _to: string | null,
      _quantity: null
    ): EventFilter;
  };

  estimateGas: {
    controller(overrides?: CallOverrides): Promise<BigNumber>;

    "controller()"(overrides?: CallOverrides): Promise<BigNumber>;

    getRequiredComponentUnitsForIssue(
      _setToken: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRequiredComponentUnitsForIssue(address,uint256)"(
      _setToken: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      _setToken: string,
      _preIssueHook: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(address,address)"(
      _setToken: string,
      _preIssueHook: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    issue(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "issue(address,uint256,address)"(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    managerIssuanceHook(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managerIssuanceHook(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    redeem(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "redeem(address,uint256,address)"(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    removeModule(overrides?: Overrides): Promise<BigNumber>;

    "removeModule()"(overrides?: Overrides): Promise<BigNumber>;
  };

  populateTransaction: {
    controller(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "controller()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getRequiredComponentUnitsForIssue(
      _setToken: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRequiredComponentUnitsForIssue(address,uint256)"(
      _setToken: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _setToken: string,
      _preIssueHook: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address,address)"(
      _setToken: string,
      _preIssueHook: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    issue(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "issue(address,uint256,address)"(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    managerIssuanceHook(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "managerIssuanceHook(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    redeem(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "redeem(address,uint256,address)"(
      _setToken: string,
      _quantity: BigNumberish,
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    removeModule(overrides?: Overrides): Promise<PopulatedTransaction>;

    "removeModule()"(overrides?: Overrides): Promise<PopulatedTransaction>;
  };
}
