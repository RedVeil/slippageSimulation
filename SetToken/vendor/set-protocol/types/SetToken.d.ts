/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface SetTokenInterface extends ethers.utils.Interface {
  functions: {
    "addComponent(address)": FunctionFragment;
    "addExternalPositionModule(address,address)": FunctionFragment;
    "addModule(address)": FunctionFragment;
    "allowance(address,address)": FunctionFragment;
    "approve(address,uint256)": FunctionFragment;
    "balanceOf(address)": FunctionFragment;
    "burn(address,uint256)": FunctionFragment;
    "components(uint256)": FunctionFragment;
    "controller()": FunctionFragment;
    "decimals()": FunctionFragment;
    "decreaseAllowance(address,uint256)": FunctionFragment;
    "editDefaultPositionUnit(address,int256)": FunctionFragment;
    "editExternalPositionData(address,address,bytes)": FunctionFragment;
    "editExternalPositionUnit(address,address,int256)": FunctionFragment;
    "editPositionMultiplier(int256)": FunctionFragment;
    "getComponents()": FunctionFragment;
    "getDefaultPositionRealUnit(address)": FunctionFragment;
    "getExternalPositionData(address,address)": FunctionFragment;
    "getExternalPositionModules(address)": FunctionFragment;
    "getExternalPositionRealUnit(address,address)": FunctionFragment;
    "getModules()": FunctionFragment;
    "getPositions()": FunctionFragment;
    "getTotalComponentRealUnits(address)": FunctionFragment;
    "increaseAllowance(address,uint256)": FunctionFragment;
    "initializeModule()": FunctionFragment;
    "invoke(address,uint256,bytes)": FunctionFragment;
    "isComponent(address)": FunctionFragment;
    "isExternalPositionModule(address,address)": FunctionFragment;
    "isInitializedModule(address)": FunctionFragment;
    "isLocked()": FunctionFragment;
    "isPendingModule(address)": FunctionFragment;
    "lock()": FunctionFragment;
    "locker()": FunctionFragment;
    "manager()": FunctionFragment;
    "mint(address,uint256)": FunctionFragment;
    "moduleStates(address)": FunctionFragment;
    "modules(uint256)": FunctionFragment;
    "name()": FunctionFragment;
    "positionMultiplier()": FunctionFragment;
    "removeComponent(address)": FunctionFragment;
    "removeExternalPositionModule(address,address)": FunctionFragment;
    "removeModule(address)": FunctionFragment;
    "removePendingModule(address)": FunctionFragment;
    "setManager(address)": FunctionFragment;
    "symbol()": FunctionFragment;
    "totalSupply()": FunctionFragment;
    "transfer(address,uint256)": FunctionFragment;
    "transferFrom(address,address,uint256)": FunctionFragment;
    "unlock()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addComponent",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "addExternalPositionModule",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "addModule", values: [string]): string;
  encodeFunctionData(
    functionFragment: "allowance",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "balanceOf", values: [string]): string;
  encodeFunctionData(
    functionFragment: "burn",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "components",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "controller",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "decimals", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "decreaseAllowance",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "editDefaultPositionUnit",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "editExternalPositionData",
    values: [string, string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "editExternalPositionUnit",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "editPositionMultiplier",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getComponents",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDefaultPositionRealUnit",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getExternalPositionData",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getExternalPositionModules",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getExternalPositionRealUnit",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getModules",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getPositions",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalComponentRealUnits",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "increaseAllowance",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "initializeModule",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "invoke",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "isComponent", values: [string]): string;
  encodeFunctionData(
    functionFragment: "isExternalPositionModule",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isInitializedModule",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "isLocked", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "isPendingModule",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "lock", values?: undefined): string;
  encodeFunctionData(functionFragment: "locker", values?: undefined): string;
  encodeFunctionData(functionFragment: "manager", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "mint",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "moduleStates",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "modules",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "positionMultiplier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeComponent",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeExternalPositionModule",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeModule",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "removePendingModule",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "setManager", values: [string]): string;
  encodeFunctionData(functionFragment: "symbol", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "totalSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transfer",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "unlock", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "addComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addExternalPositionModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addModule", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "allowance", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "burn", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "components", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "controller", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "decimals", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "decreaseAllowance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editDefaultPositionUnit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editExternalPositionData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editExternalPositionUnit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editPositionMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDefaultPositionRealUnit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getExternalPositionData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getExternalPositionModules",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getExternalPositionRealUnit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getModules", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPositions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalComponentRealUnits",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseAllowance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initializeModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "invoke", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isExternalPositionModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isInitializedModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isLocked", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isPendingModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "lock", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "locker", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "manager", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "mint", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "moduleStates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "modules", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "positionMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeExternalPositionModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removePendingModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setManager", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "transfer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unlock", data: BytesLike): Result;

  events: {
    "Approval(address,address,uint256)": EventFragment;
    "ComponentAdded(address)": EventFragment;
    "ComponentRemoved(address)": EventFragment;
    "DefaultPositionUnitEdited(address,int256)": EventFragment;
    "ExternalPositionDataEdited(address,address,bytes)": EventFragment;
    "ExternalPositionUnitEdited(address,address,int256)": EventFragment;
    "Invoked(address,uint256,bytes,bytes)": EventFragment;
    "ManagerEdited(address,address)": EventFragment;
    "ModuleAdded(address)": EventFragment;
    "ModuleInitialized(address)": EventFragment;
    "ModuleRemoved(address)": EventFragment;
    "PendingModuleRemoved(address)": EventFragment;
    "PositionModuleAdded(address,address)": EventFragment;
    "PositionModuleRemoved(address,address)": EventFragment;
    "PositionMultiplierEdited(int256)": EventFragment;
    "Transfer(address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Approval"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ComponentAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ComponentRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DefaultPositionUnitEdited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExternalPositionDataEdited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExternalPositionUnitEdited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Invoked"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ManagerEdited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ModuleAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ModuleInitialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ModuleRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PendingModuleRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PositionModuleAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PositionModuleRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PositionMultiplierEdited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Transfer"): EventFragment;
}

export class SetToken extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: SetTokenInterface;

  functions: {
    addComponent(
      _component: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addComponent(address)"(
      _component: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    addExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addExternalPositionModule(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    addModule(
      _module: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addModule(address)"(
      _module: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "allowance(address,address)"(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    approve(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "approve(address,uint256)"(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    balanceOf(
      account: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "balanceOf(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    burn(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "burn(address,uint256)"(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    components(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "components(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    controller(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "controller()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    decimals(overrides?: CallOverrides): Promise<{
      0: number;
    }>;

    "decimals()"(overrides?: CallOverrides): Promise<{
      0: number;
    }>;

    decreaseAllowance(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "decreaseAllowance(address,uint256)"(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    editDefaultPositionUnit(
      _component: string,
      _realUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "editDefaultPositionUnit(address,int256)"(
      _component: string,
      _realUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    editExternalPositionData(
      _component: string,
      _positionModule: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "editExternalPositionData(address,address,bytes)"(
      _component: string,
      _positionModule: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    editExternalPositionUnit(
      _component: string,
      _positionModule: string,
      _realUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "editExternalPositionUnit(address,address,int256)"(
      _component: string,
      _positionModule: string,
      _realUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    editPositionMultiplier(
      _newMultiplier: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "editPositionMultiplier(int256)"(
      _newMultiplier: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getComponents(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    "getComponents()"(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    getDefaultPositionRealUnit(
      _component: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getDefaultPositionRealUnit(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getExternalPositionData(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getExternalPositionData(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getExternalPositionModules(
      _component: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    "getExternalPositionModules(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    getExternalPositionRealUnit(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getExternalPositionRealUnit(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getModules(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    "getModules()"(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    getPositions(overrides?: CallOverrides): Promise<{
      0: {
        component: string;
        module: string;
        unit: BigNumber;
        positionState: number;
        data: string;
        0: string;
        1: string;
        2: BigNumber;
        3: number;
        4: string;
      }[];
    }>;

    "getPositions()"(overrides?: CallOverrides): Promise<{
      0: {
        component: string;
        module: string;
        unit: BigNumber;
        positionState: number;
        data: string;
        0: string;
        1: string;
        2: BigNumber;
        3: number;
        4: string;
      }[];
    }>;

    getTotalComponentRealUnits(
      _component: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getTotalComponentRealUnits(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    increaseAllowance(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "increaseAllowance(address,uint256)"(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    initializeModule(overrides?: Overrides): Promise<ContractTransaction>;

    "initializeModule()"(overrides?: Overrides): Promise<ContractTransaction>;

    invoke(
      _target: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "invoke(address,uint256,bytes)"(
      _target: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    isComponent(
      _component: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isComponent(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isExternalPositionModule(
      _component: string,
      _module: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isExternalPositionModule(address,address)"(
      _component: string,
      _module: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isInitializedModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isInitializedModule(address)"(
      _module: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isLocked(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    "isLocked()"(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    isPendingModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isPendingModule(address)"(
      _module: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    lock(overrides?: Overrides): Promise<ContractTransaction>;

    "lock()"(overrides?: Overrides): Promise<ContractTransaction>;

    locker(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "locker()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    manager(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "manager()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    mint(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "mint(address,uint256)"(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    moduleStates(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    "moduleStates(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    modules(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "modules(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    name(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "name()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    positionMultiplier(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "positionMultiplier()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    removeComponent(
      _component: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeComponent(address)"(
      _component: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    removeExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeExternalPositionModule(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    removeModule(
      _module: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeModule(address)"(
      _module: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    removePendingModule(
      _module: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removePendingModule(address)"(
      _module: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setManager(
      _manager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setManager(address)"(
      _manager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    symbol(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "symbol()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    totalSupply(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "totalSupply()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    transfer(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transfer(address,uint256)"(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferFrom(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferFrom(address,address,uint256)"(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    unlock(overrides?: Overrides): Promise<ContractTransaction>;

    "unlock()"(overrides?: Overrides): Promise<ContractTransaction>;
  };

  addComponent(
    _component: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addComponent(address)"(
    _component: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  addExternalPositionModule(
    _component: string,
    _positionModule: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addExternalPositionModule(address,address)"(
    _component: string,
    _positionModule: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  addModule(
    _module: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addModule(address)"(
    _module: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  allowance(
    owner: string,
    spender: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "allowance(address,address)"(
    owner: string,
    spender: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  approve(
    spender: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "approve(address,uint256)"(
    spender: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>;

  "balanceOf(address)"(
    account: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  burn(
    _account: string,
    _quantity: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "burn(address,uint256)"(
    _account: string,
    _quantity: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  components(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "components(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  controller(overrides?: CallOverrides): Promise<string>;

  "controller()"(overrides?: CallOverrides): Promise<string>;

  decimals(overrides?: CallOverrides): Promise<number>;

  "decimals()"(overrides?: CallOverrides): Promise<number>;

  decreaseAllowance(
    spender: string,
    subtractedValue: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "decreaseAllowance(address,uint256)"(
    spender: string,
    subtractedValue: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  editDefaultPositionUnit(
    _component: string,
    _realUnit: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "editDefaultPositionUnit(address,int256)"(
    _component: string,
    _realUnit: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  editExternalPositionData(
    _component: string,
    _positionModule: string,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "editExternalPositionData(address,address,bytes)"(
    _component: string,
    _positionModule: string,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  editExternalPositionUnit(
    _component: string,
    _positionModule: string,
    _realUnit: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "editExternalPositionUnit(address,address,int256)"(
    _component: string,
    _positionModule: string,
    _realUnit: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  editPositionMultiplier(
    _newMultiplier: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "editPositionMultiplier(int256)"(
    _newMultiplier: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getComponents(overrides?: CallOverrides): Promise<string[]>;

  "getComponents()"(overrides?: CallOverrides): Promise<string[]>;

  getDefaultPositionRealUnit(
    _component: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getDefaultPositionRealUnit(address)"(
    _component: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getExternalPositionData(
    _component: string,
    _positionModule: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "getExternalPositionData(address,address)"(
    _component: string,
    _positionModule: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getExternalPositionModules(
    _component: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "getExternalPositionModules(address)"(
    _component: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getExternalPositionRealUnit(
    _component: string,
    _positionModule: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getExternalPositionRealUnit(address,address)"(
    _component: string,
    _positionModule: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getModules(overrides?: CallOverrides): Promise<string[]>;

  "getModules()"(overrides?: CallOverrides): Promise<string[]>;

  getPositions(
    overrides?: CallOverrides
  ): Promise<
    {
      component: string;
      module: string;
      unit: BigNumber;
      positionState: number;
      data: string;
      0: string;
      1: string;
      2: BigNumber;
      3: number;
      4: string;
    }[]
  >;

  "getPositions()"(
    overrides?: CallOverrides
  ): Promise<
    {
      component: string;
      module: string;
      unit: BigNumber;
      positionState: number;
      data: string;
      0: string;
      1: string;
      2: BigNumber;
      3: number;
      4: string;
    }[]
  >;

  getTotalComponentRealUnits(
    _component: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getTotalComponentRealUnits(address)"(
    _component: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  increaseAllowance(
    spender: string,
    addedValue: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "increaseAllowance(address,uint256)"(
    spender: string,
    addedValue: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  initializeModule(overrides?: Overrides): Promise<ContractTransaction>;

  "initializeModule()"(overrides?: Overrides): Promise<ContractTransaction>;

  invoke(
    _target: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "invoke(address,uint256,bytes)"(
    _target: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  isComponent(_component: string, overrides?: CallOverrides): Promise<boolean>;

  "isComponent(address)"(
    _component: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isExternalPositionModule(
    _component: string,
    _module: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isExternalPositionModule(address,address)"(
    _component: string,
    _module: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isInitializedModule(
    _module: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isInitializedModule(address)"(
    _module: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isLocked(overrides?: CallOverrides): Promise<boolean>;

  "isLocked()"(overrides?: CallOverrides): Promise<boolean>;

  isPendingModule(_module: string, overrides?: CallOverrides): Promise<boolean>;

  "isPendingModule(address)"(
    _module: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  lock(overrides?: Overrides): Promise<ContractTransaction>;

  "lock()"(overrides?: Overrides): Promise<ContractTransaction>;

  locker(overrides?: CallOverrides): Promise<string>;

  "locker()"(overrides?: CallOverrides): Promise<string>;

  manager(overrides?: CallOverrides): Promise<string>;

  "manager()"(overrides?: CallOverrides): Promise<string>;

  mint(
    _account: string,
    _quantity: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "mint(address,uint256)"(
    _account: string,
    _quantity: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  moduleStates(arg0: string, overrides?: CallOverrides): Promise<number>;

  "moduleStates(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<number>;

  modules(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "modules(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  name(overrides?: CallOverrides): Promise<string>;

  "name()"(overrides?: CallOverrides): Promise<string>;

  positionMultiplier(overrides?: CallOverrides): Promise<BigNumber>;

  "positionMultiplier()"(overrides?: CallOverrides): Promise<BigNumber>;

  removeComponent(
    _component: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeComponent(address)"(
    _component: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  removeExternalPositionModule(
    _component: string,
    _positionModule: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeExternalPositionModule(address,address)"(
    _component: string,
    _positionModule: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  removeModule(
    _module: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeModule(address)"(
    _module: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  removePendingModule(
    _module: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removePendingModule(address)"(
    _module: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setManager(
    _manager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setManager(address)"(
    _manager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  symbol(overrides?: CallOverrides): Promise<string>;

  "symbol()"(overrides?: CallOverrides): Promise<string>;

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

  "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

  transfer(
    recipient: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transfer(address,uint256)"(
    recipient: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferFrom(
    sender: string,
    recipient: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferFrom(address,address,uint256)"(
    sender: string,
    recipient: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  unlock(overrides?: Overrides): Promise<ContractTransaction>;

  "unlock()"(overrides?: Overrides): Promise<ContractTransaction>;

  callStatic: {
    addComponent(_component: string, overrides?: CallOverrides): Promise<void>;

    "addComponent(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "addExternalPositionModule(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addModule(_module: string, overrides?: CallOverrides): Promise<void>;

    "addModule(address)"(
      _module: string,
      overrides?: CallOverrides
    ): Promise<void>;

    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowance(address,address)"(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(
      spender: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "approve(address,uint256)"(
      spender: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balanceOf(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    burn(
      _account: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "burn(address,uint256)"(
      _account: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    components(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "components(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    controller(overrides?: CallOverrides): Promise<string>;

    "controller()"(overrides?: CallOverrides): Promise<string>;

    decimals(overrides?: CallOverrides): Promise<number>;

    "decimals()"(overrides?: CallOverrides): Promise<number>;

    decreaseAllowance(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "decreaseAllowance(address,uint256)"(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    editDefaultPositionUnit(
      _component: string,
      _realUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "editDefaultPositionUnit(address,int256)"(
      _component: string,
      _realUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    editExternalPositionData(
      _component: string,
      _positionModule: string,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "editExternalPositionData(address,address,bytes)"(
      _component: string,
      _positionModule: string,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    editExternalPositionUnit(
      _component: string,
      _positionModule: string,
      _realUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "editExternalPositionUnit(address,address,int256)"(
      _component: string,
      _positionModule: string,
      _realUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    editPositionMultiplier(
      _newMultiplier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "editPositionMultiplier(int256)"(
      _newMultiplier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getComponents(overrides?: CallOverrides): Promise<string[]>;

    "getComponents()"(overrides?: CallOverrides): Promise<string[]>;

    getDefaultPositionRealUnit(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDefaultPositionRealUnit(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getExternalPositionData(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "getExternalPositionData(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getExternalPositionModules(
      _component: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getExternalPositionModules(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getExternalPositionRealUnit(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getExternalPositionRealUnit(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getModules(overrides?: CallOverrides): Promise<string[]>;

    "getModules()"(overrides?: CallOverrides): Promise<string[]>;

    getPositions(
      overrides?: CallOverrides
    ): Promise<
      {
        component: string;
        module: string;
        unit: BigNumber;
        positionState: number;
        data: string;
        0: string;
        1: string;
        2: BigNumber;
        3: number;
        4: string;
      }[]
    >;

    "getPositions()"(
      overrides?: CallOverrides
    ): Promise<
      {
        component: string;
        module: string;
        unit: BigNumber;
        positionState: number;
        data: string;
        0: string;
        1: string;
        2: BigNumber;
        3: number;
        4: string;
      }[]
    >;

    getTotalComponentRealUnits(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTotalComponentRealUnits(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    increaseAllowance(
      spender: string,
      addedValue: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "increaseAllowance(address,uint256)"(
      spender: string,
      addedValue: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    initializeModule(overrides?: CallOverrides): Promise<void>;

    "initializeModule()"(overrides?: CallOverrides): Promise<void>;

    invoke(
      _target: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "invoke(address,uint256,bytes)"(
      _target: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    isComponent(
      _component: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isComponent(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isExternalPositionModule(
      _component: string,
      _module: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isExternalPositionModule(address,address)"(
      _component: string,
      _module: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isInitializedModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isInitializedModule(address)"(
      _module: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isLocked(overrides?: CallOverrides): Promise<boolean>;

    "isLocked()"(overrides?: CallOverrides): Promise<boolean>;

    isPendingModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isPendingModule(address)"(
      _module: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    lock(overrides?: CallOverrides): Promise<void>;

    "lock()"(overrides?: CallOverrides): Promise<void>;

    locker(overrides?: CallOverrides): Promise<string>;

    "locker()"(overrides?: CallOverrides): Promise<string>;

    manager(overrides?: CallOverrides): Promise<string>;

    "manager()"(overrides?: CallOverrides): Promise<string>;

    mint(
      _account: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "mint(address,uint256)"(
      _account: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    moduleStates(arg0: string, overrides?: CallOverrides): Promise<number>;

    "moduleStates(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<number>;

    modules(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "modules(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    name(overrides?: CallOverrides): Promise<string>;

    "name()"(overrides?: CallOverrides): Promise<string>;

    positionMultiplier(overrides?: CallOverrides): Promise<BigNumber>;

    "positionMultiplier()"(overrides?: CallOverrides): Promise<BigNumber>;

    removeComponent(
      _component: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeComponent(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removeExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeExternalPositionModule(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removeModule(_module: string, overrides?: CallOverrides): Promise<void>;

    "removeModule(address)"(
      _module: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removePendingModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "removePendingModule(address)"(
      _module: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setManager(_manager: string, overrides?: CallOverrides): Promise<void>;

    "setManager(address)"(
      _manager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    symbol(overrides?: CallOverrides): Promise<string>;

    "symbol()"(overrides?: CallOverrides): Promise<string>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(
      recipient: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "transfer(address,uint256)"(
      recipient: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    transferFrom(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "transferFrom(address,address,uint256)"(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    unlock(overrides?: CallOverrides): Promise<void>;

    "unlock()"(overrides?: CallOverrides): Promise<void>;
  };

  filters: {
    Approval(
      owner: string | null,
      spender: string | null,
      value: null
    ): EventFilter;

    ComponentAdded(_component: string | null): EventFilter;

    ComponentRemoved(_component: string | null): EventFilter;

    DefaultPositionUnitEdited(
      _component: string | null,
      _realUnit: null
    ): EventFilter;

    ExternalPositionDataEdited(
      _component: string | null,
      _positionModule: string | null,
      _data: null
    ): EventFilter;

    ExternalPositionUnitEdited(
      _component: string | null,
      _positionModule: string | null,
      _realUnit: null
    ): EventFilter;

    Invoked(
      _target: string | null,
      _value: BigNumberish | null,
      _data: null,
      _returnValue: null
    ): EventFilter;

    ManagerEdited(_newManager: null, _oldManager: null): EventFilter;

    ModuleAdded(_module: string | null): EventFilter;

    ModuleInitialized(_module: string | null): EventFilter;

    ModuleRemoved(_module: string | null): EventFilter;

    PendingModuleRemoved(_module: string | null): EventFilter;

    PositionModuleAdded(
      _component: string | null,
      _positionModule: string | null
    ): EventFilter;

    PositionModuleRemoved(
      _component: string | null,
      _positionModule: string | null
    ): EventFilter;

    PositionMultiplierEdited(_newMultiplier: null): EventFilter;

    Transfer(from: string | null, to: string | null, value: null): EventFilter;
  };

  estimateGas: {
    addComponent(_component: string, overrides?: Overrides): Promise<BigNumber>;

    "addComponent(address)"(
      _component: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    addExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addExternalPositionModule(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    addModule(_module: string, overrides?: Overrides): Promise<BigNumber>;

    "addModule(address)"(
      _module: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowance(address,address)"(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "approve(address,uint256)"(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balanceOf(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    burn(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "burn(address,uint256)"(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    components(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "components(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    controller(overrides?: CallOverrides): Promise<BigNumber>;

    "controller()"(overrides?: CallOverrides): Promise<BigNumber>;

    decimals(overrides?: CallOverrides): Promise<BigNumber>;

    "decimals()"(overrides?: CallOverrides): Promise<BigNumber>;

    decreaseAllowance(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "decreaseAllowance(address,uint256)"(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    editDefaultPositionUnit(
      _component: string,
      _realUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "editDefaultPositionUnit(address,int256)"(
      _component: string,
      _realUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    editExternalPositionData(
      _component: string,
      _positionModule: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "editExternalPositionData(address,address,bytes)"(
      _component: string,
      _positionModule: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    editExternalPositionUnit(
      _component: string,
      _positionModule: string,
      _realUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "editExternalPositionUnit(address,address,int256)"(
      _component: string,
      _positionModule: string,
      _realUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    editPositionMultiplier(
      _newMultiplier: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "editPositionMultiplier(int256)"(
      _newMultiplier: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getComponents(overrides?: CallOverrides): Promise<BigNumber>;

    "getComponents()"(overrides?: CallOverrides): Promise<BigNumber>;

    getDefaultPositionRealUnit(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDefaultPositionRealUnit(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getExternalPositionData(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getExternalPositionData(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getExternalPositionModules(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getExternalPositionModules(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getExternalPositionRealUnit(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getExternalPositionRealUnit(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getModules(overrides?: CallOverrides): Promise<BigNumber>;

    "getModules()"(overrides?: CallOverrides): Promise<BigNumber>;

    getPositions(overrides?: CallOverrides): Promise<BigNumber>;

    "getPositions()"(overrides?: CallOverrides): Promise<BigNumber>;

    getTotalComponentRealUnits(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTotalComponentRealUnits(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    increaseAllowance(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "increaseAllowance(address,uint256)"(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    initializeModule(overrides?: Overrides): Promise<BigNumber>;

    "initializeModule()"(overrides?: Overrides): Promise<BigNumber>;

    invoke(
      _target: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "invoke(address,uint256,bytes)"(
      _target: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    isComponent(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isComponent(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isExternalPositionModule(
      _component: string,
      _module: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isExternalPositionModule(address,address)"(
      _component: string,
      _module: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isInitializedModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isInitializedModule(address)"(
      _module: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isLocked(overrides?: CallOverrides): Promise<BigNumber>;

    "isLocked()"(overrides?: CallOverrides): Promise<BigNumber>;

    isPendingModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isPendingModule(address)"(
      _module: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lock(overrides?: Overrides): Promise<BigNumber>;

    "lock()"(overrides?: Overrides): Promise<BigNumber>;

    locker(overrides?: CallOverrides): Promise<BigNumber>;

    "locker()"(overrides?: CallOverrides): Promise<BigNumber>;

    manager(overrides?: CallOverrides): Promise<BigNumber>;

    "manager()"(overrides?: CallOverrides): Promise<BigNumber>;

    mint(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "mint(address,uint256)"(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    moduleStates(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "moduleStates(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    modules(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "modules(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    "name()"(overrides?: CallOverrides): Promise<BigNumber>;

    positionMultiplier(overrides?: CallOverrides): Promise<BigNumber>;

    "positionMultiplier()"(overrides?: CallOverrides): Promise<BigNumber>;

    removeComponent(
      _component: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeComponent(address)"(
      _component: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    removeExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeExternalPositionModule(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    removeModule(_module: string, overrides?: Overrides): Promise<BigNumber>;

    "removeModule(address)"(
      _module: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    removePendingModule(
      _module: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removePendingModule(address)"(
      _module: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setManager(_manager: string, overrides?: Overrides): Promise<BigNumber>;

    "setManager(address)"(
      _manager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<BigNumber>;

    "symbol()"(overrides?: CallOverrides): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transfer(address,uint256)"(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferFrom(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferFrom(address,address,uint256)"(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    unlock(overrides?: Overrides): Promise<BigNumber>;

    "unlock()"(overrides?: Overrides): Promise<BigNumber>;
  };

  populateTransaction: {
    addComponent(
      _component: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addComponent(address)"(
      _component: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    addExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addExternalPositionModule(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    addModule(
      _module: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addModule(address)"(
      _module: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "allowance(address,address)"(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    approve(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "approve(address,uint256)"(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    balanceOf(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOf(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    burn(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "burn(address,uint256)"(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    components(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "components(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    controller(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "controller()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    decimals(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "decimals()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    decreaseAllowance(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "decreaseAllowance(address,uint256)"(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    editDefaultPositionUnit(
      _component: string,
      _realUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "editDefaultPositionUnit(address,int256)"(
      _component: string,
      _realUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    editExternalPositionData(
      _component: string,
      _positionModule: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "editExternalPositionData(address,address,bytes)"(
      _component: string,
      _positionModule: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    editExternalPositionUnit(
      _component: string,
      _positionModule: string,
      _realUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "editExternalPositionUnit(address,address,int256)"(
      _component: string,
      _positionModule: string,
      _realUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    editPositionMultiplier(
      _newMultiplier: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "editPositionMultiplier(int256)"(
      _newMultiplier: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getComponents(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getComponents()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getDefaultPositionRealUnit(
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getDefaultPositionRealUnit(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getExternalPositionData(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getExternalPositionData(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getExternalPositionModules(
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getExternalPositionModules(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getExternalPositionRealUnit(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getExternalPositionRealUnit(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getModules(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getModules()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPositions(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getPositions()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTotalComponentRealUnits(
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTotalComponentRealUnits(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    increaseAllowance(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "increaseAllowance(address,uint256)"(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    initializeModule(overrides?: Overrides): Promise<PopulatedTransaction>;

    "initializeModule()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    invoke(
      _target: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "invoke(address,uint256,bytes)"(
      _target: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    isComponent(
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isComponent(address)"(
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isExternalPositionModule(
      _component: string,
      _module: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isExternalPositionModule(address,address)"(
      _component: string,
      _module: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isInitializedModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isInitializedModule(address)"(
      _module: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isLocked(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isLocked()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    isPendingModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isPendingModule(address)"(
      _module: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    lock(overrides?: Overrides): Promise<PopulatedTransaction>;

    "lock()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    locker(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "locker()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    manager(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "manager()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    mint(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "mint(address,uint256)"(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    moduleStates(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "moduleStates(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    modules(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "modules(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "name()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    positionMultiplier(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "positionMultiplier()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeComponent(
      _component: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeComponent(address)"(
      _component: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    removeExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeExternalPositionModule(address,address)"(
      _component: string,
      _positionModule: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    removeModule(
      _module: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeModule(address)"(
      _module: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    removePendingModule(
      _module: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removePendingModule(address)"(
      _module: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setManager(
      _manager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setManager(address)"(
      _manager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "symbol()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "totalSupply()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transfer(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transfer(address,uint256)"(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferFrom(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferFrom(address,address,uint256)"(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    unlock(overrides?: Overrides): Promise<PopulatedTransaction>;

    "unlock()"(overrides?: Overrides): Promise<PopulatedTransaction>;
  };
}
